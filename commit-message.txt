feat [by-ai] FT-009 JWT 인증 필터 및 Spring Security 통합 완료

- 기존 OAuth2 + 세션 기반 인증에 JWT 토큰 기반 API 인증 추가
- JWT 토큰의 role 정보를 Spring Security 권한으로 올바르게 변환

## 구현된 주요 컴포넌트

### 코어 계층 (인증 필터)
- JwtAuthenticationFilter: OncePerRequestFilter 기반 JWT 토큰 검증 필터
- SecurityConfig 통합: JWT 필터를 Spring Security 필터 체인에 추가
- Stateless 세션 정책: API 엔드포인트에 대한 완전한 Stateless 아키텍처

### 도메인 객체 확장
- AuthenticationType.JWT: 새로운 인증 타입 추가
- FTUser.ofJwtUser(): JWT 전용 팩토리 메서드 구현
- JWT role → Spring Security 권한 변환 로직

### 특화 사항
- 정보의 최소화: JWT에 OAuth2Provider 정보 제외로 토큰 크기 최적화
- 보안 강화: Authorization 헤더 Bearer 토큰 검증
- 권한별 접근 제어: ADMIN/USER role 기반 API 접근 권한 구현
- 하이브리드 아키텍처: 기존 OAuth2/세션 인증과 JWT 인증 동시 지원

## 테스트 구현
- JwtAuthenticationFilterTest: JWT 필터 단위 테스트 8개 ✅
- 토큰 검증, 권한 설정, 예외 처리 시나리오 완전 커버
- ADMIN 역할 토큰 → ROLE_ADMIN 권한 변환 검증
- 전체 테스트 563개 통과 확인

## 해결된 이슈
- JWT 토큰 role 정보 미반영 문제 해결
- AuthenticationType별 명확한 구분으로 런타임 혼란 방지
- Spring Security 권한 기반 접근 제어 완전 작동

## 설계 의사결정
- JWT vs OAuth2Provider: 정보 최소화 원칙으로 Provider 정보 제외
- ofJwtUser vs ofOAuth2User: 인증 방식별 명확한 팩토리 메서드 분리
- Stateless 정책: API 성능 최적화 및 서버 확장성 확보

## 다음 단계
- FT-010: OAuth2 JWT 연동 및 토큰 발급 구현
- FT-011: 토큰 갱신 및 로그아웃 API 구현
