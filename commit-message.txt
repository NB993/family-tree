feat [by-ai] FT-008 RefreshToken 엔티티 및 토큰 저장소 구현 완료

- JWT 인증 시스템을 위한 RefreshToken 저장소 완전 구현
- 사용자별 고유 토큰 관리 및 Upsert 동작 지원
- 배치 작업을 위한 만료 토큰 조회 및 정리 기능 제공

## 구현된 주요 컴포넌트

### 도메인 객체
- RefreshToken: JWT 리프레시 토큰 도메인 엔티티 (불변 객체 설계)

### 애플리케이션 계층
- FindRefreshTokenByUserIdQuery: 사용자 ID 기반 토큰 조회 쿼리
- FindExpiredRefreshTokensQuery: 만료된 토큰 일괄 조회 쿼리
- SaveRefreshTokenCommand: 토큰 저장 및 갱신 커맨드
- DeleteRefreshTokenCommand: 토큰 삭제 커맨드
- FindRefreshTokenUseCase: 토큰 조회 유스케이스 인터페이스
- SaveRefreshTokenUseCase: 토큰 저장 유스케이스 인터페이스
- DeleteRefreshTokenUseCase: 토큰 삭제 유스케이스 인터페이스
- FindRefreshTokenService: 토큰 조회 비즈니스 로직 서비스
- SaveRefreshTokenService: 토큰 저장 비즈니스 로직 서비스
- DeleteRefreshTokenService: 토큰 삭제 비즈니스 로직 서비스

### 인프라 계층
- RefreshTokenJpaEntity: refresh_tokens 테이블 JPA 엔티티
- RefreshTokenJpaRepository: Spring Data JPA 리포지토리
- RefreshTokenAdapter: 아웃바운드 포트 통합 구현체

### 특화 사항
- 사용자당 단일 토큰: UNIQUE 제약조건으로 중복 방지
- Upsert 동작: 기존 토큰 자동 교체로 사용자별 최신 토큰 유지
- 배치 작업 지원: 만료 토큰 일괄 조회 및 삭제 기능
- 보안 강화: 토큰 해시 저장 및 민감정보 마스킹
- 성능 최적화: user_id, expires_at 인덱스로 쿼리 성능 향상

## 테스트 구현
- 단위 테스트 11개 작성 및 통과 ✅
- Command/Query 객체 유효성 검증 테스트
- Service 계층 비즈니스 로직 테스트
- Adapter 계층 데이터베이스 연동 테스트
- 전체 테스트 통과: 546개 테스트 모두 성공

## 데이터베이스 스키마
- refresh_tokens 테이블 설계 및 인덱스 최적화
- 사용자별 고유 토큰 제약조건 (user_id UNIQUE)
- 만료 토큰 배치 처리 인덱스 (expires_at INDEX)
- 자동 타임스탬프 관리 (created_at, updated_at)

## 헥사고날 아키텍처 준수
- 포트와 어댑터 패턴으로 인프라 의존성 분리
- 의존성 역전 원칙 적용으로 확장성 확보
- 단일 책임 원칙에 따른 UseCase별 Service 분리

## 다음 단계
- FT-009: JWT 인증 필터 및 Spring Security 통합
- FT-010: OAuth2 JWT 연동 및 토큰 발급 구현
- FT-011: 토큰 갱신 및 로그아웃 API 구현
