feat [with-ai] FT-017 Family 목록 및 검색 기능 - Phase 2 공개 Family 검색 + 무한 스크롤

- 공개된 Family를 키워드로 검색하고 무한 스크롤로 조회하는 기능 구현 완료
- 기존 FindFamilyUseCase 확장 패턴을 Phase 1과 동일하게 적용하여 일관성 유지
- GET /api/families/public 엔드포인트로 공개 Family 검색 및 무한 스크롤 지원

## 구현된 주요 컴포넌트

### 애플리케이션 계층
- FindPublicFamiliesQuery: 공개 Family 검색을 위한 Query 클래스 (키워드, 커서, 사이즈, 사용자 ID 검증)
- CursorPage<T>: 커서 기반 페이징 결과를 담는 도메인 객체 (무한 스크롤 최적화)
- FindFamilyUseCase: findAll(FindPublicFamiliesQuery) 메서드 오버로딩 추가
- FindFamilyService: 공개 Family 검색 비즈니스 로직 구현
- FindFamilyPort: findPublicFamiliesByKeyword 메서드 추가

### 인프라 계층
- CursorUtils: Base64 인코딩/디코딩을 통한 안전한 커서 처리 유틸리티
- FamilyJpaRepository: 공개 Family 검색을 위한 쿼리 메서드 확장
- FamilyMemberJpaRepository: countByFamilyId 메서드 추가 (구성원 수 계산)
- FamilyAdapter: findPublicFamiliesByKeyword 구현 (커서 기반 페이징 처리)

### 프레젠테이션 계층
- FindFamilyController: GET /api/families/public 엔드포인트 추가
- CursorPageResponse<T>: 무한 스크롤 응답을 위한 DTO 클래스
- PublicFamilyResponse: 공개 Family 정보 응답 DTO

## 테스트 구현
- FindPublicFamiliesQueryTest: Query 객체 유효성 검증 단위 테스트 ✅
- CursorPageTest: 커서 페이지 도메인 객체 단위 테스트 ✅
- CursorUtilsTest: 커서 유틸리티 인코딩/디코딩 단위 테스트 ✅
- FindFamilyControllerTest: 공개 Family 검색 API 통합 테스트 추가 ✅
- 전체 테스트 통과 확인 (기존 기능 호환성 유지)

## 해결된 이슈
- Phase 1과 동일한 UseCase 확장 패턴으로 아키텍처 일관성 확보
- 커서 기반 페이징으로 데이터 변경 시에도 안정적인 무한 스크롤 제공
- Base64 인코딩을 통한 커서 보안 강화 및 예측 불가능성 확보
- 기존 검색 로직을 확장하여 공개 여부 필터링 추가 (isPublic=true)
- 성능 최적화를 위해 간단한 구현 우선, 복잡한 JOIN 쿼리는 추후 개선 예정

## API 명세
- GET /api/families/public?keyword={keyword}&cursor={cursor}&size={size}
- 응답: CursorPageResponse<PublicFamilyResponse> 구조
- 키워드 기반 검색 + 공개 여부 필터링 + 커서 기반 무한 스크롤 지원

## 다음 단계
- Story-017 개발 문서 작성 예정
- Story-018: Family 권한 기반 접근 제어 구현 준비 완료
